{"version":3,"file":"index-BxhtxKoB.js","sources":["../../src/components/ThemeCustomizer/LayoutColor.jsx","../../src/components/ThemeCustomizer/LeftSideBarTheme.jsx","../../src/components/ThemeCustomizer/TopBarTheme.jsx","../../src/components/ThemeCustomizer/index.jsx","../../src/layouts/RightSidebar/index.jsx"],"sourcesContent":["import { Form } from \"react-bootstrap\";\nconst LayoutColor = ({\n  changeLayoutTheme,\n  theme\n}) => {\n  return <>\n            <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Color Scheme</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input type=\"radio\" name=\"layout-color\" id=\"light-mode-check\" value={'light'} onChange={e => changeLayoutTheme(e.target.value)} checked={theme === 'light'} />\n                <Form.Check.Label htmlFor=\"light-mode-check\">\n                    Light Mode\n                </Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input type=\"radio\" name=\"layout-color\" id=\"dark-mode-check\" value={'dark'} onChange={e => changeLayoutTheme(e.target.value)} checked={theme === 'dark'} />\n                <Form.Check.Label htmlFor=\"dark-mode-check\">Dark Mode</Form.Check.Label>\n            </Form.Check>\n        </>;\n};\nexport default LayoutColor;","import { Form } from \"react-bootstrap\";\nconst LeftSideBarTheme = ({\n  changeLeftSidebarTheme,\n  theme\n}) => {\n  return <>\n            <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Left Sidebar Color</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input type=\"radio\" name=\"theme\" id=\"light-check\" value={'light'} onChange={e => changeLeftSidebarTheme(e.target.value)} checked={theme === 'light'} />\n                <Form.Check.Label htmlFor=\"light-check\">Light</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input type=\"radio\" name=\"theme\" id=\"dark-check\" value={'dark'} onChange={e => changeLeftSidebarTheme(e.target.value)} checked={theme === 'dark'} />\n                <Form.Check.Label htmlFor=\"dark-check\">Dark</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input type=\"radio\" name=\"theme\" id=\"brand-check\" value={'brand'} onChange={e => changeLeftSidebarTheme(e.target.value)} checked={theme === 'brand'} />\n                <Form.Check.Label htmlFor=\"brand-check\">Brand</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input type=\"radio\" name=\"theme\" id=\"gradient-check\" value={'gradient'} onChange={e => changeLeftSidebarTheme(e.target.value)} checked={theme === 'gradient'} />\n                <Form.Check.Label htmlFor=\"gradient-check\">Gradient</Form.Check.Label>\n            </Form.Check>\n        </>;\n};\nexport default LeftSideBarTheme;","import { Form } from \"react-bootstrap\";\nconst TopBarTheme = ({\n  changeTopBarTheme,\n  theme\n}) => {\n  return <>\n            <h6 className=\"fw-medium font-14 mt-4 mb-2 pb-1\">Topbar</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input type=\"radio\" name=\"topbar-color\" id=\"lighttopbar-check\" value={'light'} onChange={e => changeTopBarTheme(e.target.value)} checked={theme === 'light'} />\n                <Form.Check.Label htmlFor=\"lighttopbar-check\">Light</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input type=\"radio\" name=\"topbar-color\" id=\"darktopbar-check\" value={'dark'} onChange={e => changeTopBarTheme(e.target.value)} checked={theme === 'dark'} />\n                <Form.Check.Label htmlFor=\"darktopbar-check\">Dark</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input type=\"radio\" name=\"topbar-color\" id=\"brandtopbar-check\" value={'brand'} onChange={e => changeTopBarTheme(e.target.value)} checked={theme === 'brand'} />\n                <Form.Check.Label htmlFor=\"brandtopbar-check\">Brand</Form.Check.Label>\n            </Form.Check>\n        </>;\n};\nexport default TopBarTheme;","import React from \"react\";\nimport {useState, useEffect, useCallback} from \"react\";\n\n// custom hook\nimport {useViewport} from \"@/hooks/useViewPort\";\n\n// components\nimport LayoutColor from \"./LayoutColor\";\nimport LeftSideBarTheme from \"./LeftSideBarTheme\";\nimport TopBarTheme from \"./TopBarTheme.jsx\";\nimport {useLayoutContext} from \"@/context/useLayoutContext.jsx\";\n\nconst ThemeCustomizer = () => {\n    const {\n        width\n    } = useViewport();\n    const {\n        theme,\n        menu,\n        topBar,\n        changeTheme,\n        changeMenuTheme,\n        changeTopBarTheme,\n        resetSettings\n    } = useLayoutContext();\n\n    /**\n     * Change the layout color\n     */\n    const changeLayoutTheme = value => {\n        switch (value) {\n            case \"dark\":\n                changeTheme('dark');\n                break;\n            default:\n                changeTheme('light');\n                break;\n        }\n    };\n\n    /**\n     * Changes the theme\n     */\n    const changeLeftSidebarTheme = value => {\n        switch (value) {\n            case \"dark\":\n                changeMenuTheme('dark');\n                break;\n            case \"brand\":\n                changeMenuTheme('brand');\n                break;\n            case \"gradient\":\n                changeMenuTheme('gradient');\n                break;\n            default:\n                changeMenuTheme('light');\n                break;\n        }\n    };\n\n    /*\n     * Change topbar theme\n     */\n    const changeTopBarColor = value => {\n        switch (value) {\n            case \"light\":\n                changeTopBarTheme('light');\n                break;\n            case \"brand\":\n                changeTopBarTheme('brand');\n                break;\n            default:\n                changeTopBarTheme('dark');\n                break;\n        }\n    };\n\n    return <React.Fragment>\n        <h6 className=\"fw-medium px-3 m-0 py-2 font-13 text-uppercase bg-light\">\n            <span className=\"d-block py-1\">Theme Settings</span>\n        </h6>\n        <div className=\"p-3\">\n            <div className=\"alert alert-warning\" role=\"alert\">\n                <strong>Customize </strong> the overall color scheme, sidebar menu,\n                etc.\n            </div>\n\n            <LayoutColor changeLayoutTheme={changeLayoutTheme} theme={theme}/>\n\n            {/* Left Sidebar */}\n            <LeftSideBarTheme changeLeftSidebarTheme={changeLeftSidebarTheme} theme={menu.theme}/>\n\n            {/* Topbar */}\n            <TopBarTheme changeTopBarTheme={changeTopBarColor} theme={topBar.theme}/>\n\n            <div className=\"d-grid mt-4\">\n                <button className=\"btn btn-primary\" id=\"resetBtn\" onClick={resetSettings}>\n                    Reset to Default\n                </button>\n            </div>\n        </div>\n    </React.Fragment>;\n};\nexport default ThemeCustomizer;","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Nav, Offcanvas, Tab } from \"react-bootstrap\";\nimport SimpleBar from \"simplebar-react\";\n\n// components\nimport ThemeCustomizer from \"@/components/ThemeCustomizer/\";\nimport { chats, tasks } from \"./data\";\nimport { useLayoutContext } from \"@/context/useLayoutContext.jsx\";\n\nconst RightSideBar = () => {\n  const rightBarNodeRef = useRef(null);\n  const [showRightSideNav, setShowRightSideNav] = useState(rightBarNodeRef);\n  const {\n    themeCustomizer\n  } = useLayoutContext();\n  /**\n   * Handle the click anywhere in doc\n   */\n  const handleOtherClick = useCallback(e => {\n    if (themeCustomizer.open) {\n      if (rightBarNodeRef && rightBarNodeRef.current && rightBarNodeRef.current.contains(e.target)) {\n        return;\n      } else {\n        themeCustomizer.toggle();\n        setShowRightSideNav(false);\n      }\n    }\n  }, [rightBarNodeRef, themeCustomizer.open]);\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleOtherClick, false);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOtherClick, false);\n    };\n  }, [handleOtherClick]);\n  return <React.Fragment>\n            <Offcanvas className=\"right-bar\" show={showRightSideNav} onHide={handleOtherClick} placement=\"end\">\n                <div className=\"h-100\" ref={rightBarNodeRef}>\n                    <SimpleBar style={{\n          maxHeight: \"100%\",\n          zIndex: 10000\n        }}\n        // timeout={500}\n        scrollbarMaxSize={320}>\n                        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"themecustomizer\">\n                            <Nav variant=\"tabs\" className=\"nav-bordered nav-justified\">\n                                <Nav.Item as=\"li\">\n                                    <Nav.Link eventKey=\"themecustomizer\" className=\"py-2 cursor-pointer\">\n                                        <i className=\"mdi mdi-cog-outline d-block font-22 my-1\"></i>\n                                    </Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n\n                            <Tab.Content className=\"p-0\">\n                                <Tab.Pane eventKey=\"themecustomizer\">\n                                    <ThemeCustomizer />\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Tab.Container>\n                    </SimpleBar>\n                </div>\n            </Offcanvas>\n            {/* <div className=\"rightbar-overlay\"></div> */}\n        </React.Fragment>;\n};\nexport default RightSideBar;"],"names":["LayoutColor","changeLayoutTheme","theme","jsxs","Fragment","jsx","Form","e","LeftSideBarTheme","changeLeftSidebarTheme","TopBarTheme","changeTopBarTheme","ThemeCustomizer","useViewport","menu","topBar","changeTheme","changeMenuTheme","resetSettings","useLayoutContext","value","changeTopBarColor","React","RightSideBar","rightBarNodeRef","useRef","showRightSideNav","setShowRightSideNav","useState","themeCustomizer","handleOtherClick","useCallback","useEffect","Offcanvas","SimpleBar","Tab","Nav"],"mappings":"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"}