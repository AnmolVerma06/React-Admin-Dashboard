{"version":3,"file":"Navbar-sZ6YCQhP.js","sources":["../../src/utils/array.js","../../src/layouts/Horizontal/Menu.jsx","../../src/layouts/Horizontal/Navbar.jsx"],"sourcesContent":["const groupByFields = (array, f) => {\n  /*\n    params description :\n        f : function which returnf the array of fields \n        e.g. :  (item) => {\n            return [itemField1, itemField2];\n        }\n        array : array of data to group e.g. : [{...}, {...}]       \n    */\n  const groups = {};\n  array.forEach(o => {\n    const group = JSON.stringify(f(o));\n    groups[group] = groups[group] || [];\n    groups[group].push(o);\n  });\n  return Object.keys(groups).map(group => {\n    return groups[group];\n  });\n};\n\n/**\n * split array into chunks\n * @param array - array to split\n * @param chunkSize - chunk size\n * @returns\n */\nconst splitArray = (array, chunkSize) => {\n  const chunks = Array(Math.ceil(array.length / chunkSize)).fill(1).map((_, index) => index * chunkSize).map(begin => array.slice(begin, begin + chunkSize));\n  return chunks;\n};\nexport { groupByFields, splitArray };","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// helpers\nimport { findAllParent, findMenuItem } from \"../../helpers/menu\";\n\n// constants\n\n// utils\nimport { splitArray } from \"../../utils/\";\n\n// custom hook\nimport { useViewport } from \"../../hooks/useViewPort\";\nconst MenuItemWithChildren = ({\n  item,\n  tag,\n  linkClassName,\n  className,\n  subMenuClassNames,\n  activeMenuItems,\n  toggleMenu\n}) => {\n  const Tag = tag;\n  //\n  const {\n    width\n  } = useViewport();\n  const [open, setOpen] = useState(activeMenuItems.includes(item.key));\n  const showMenu = width <= 768 && open;\n  const hasChild = item.children && (item.children || []).filter(child => child.children?.length && child.children);\n  const hasGrandChild = !(hasChild.length > 0 && hasChild) && item.children.length >= 15;\n  const chunks = hasGrandChild ? splitArray(item.children, 7) : [];\n  useEffect(() => {\n    setOpen(activeMenuItems.includes(item.key));\n  }, [activeMenuItems, item]);\n\n  /**\n   * toggles the menu\n   */\n  const toggleMenuItem = e => {\n    e.preventDefault();\n    const status = !open;\n    setOpen(status);\n    if (toggleMenu) toggleMenu(item, status);\n    return false;\n  };\n  const Icon = item.icon;\n  return <Tag className={classNames(className, activeMenuItems.includes(item.key) ? \"manuitem-active\" : \"\")}>\n            <Link to=\"/#\" onClick={toggleMenuItem} data-menu-key={item.key} className={classNames(\"menu-link\", linkClassName, {\n      active: activeMenuItems.includes(item.key)\n    })}\n    // className='menu-link'\n    id={item.key} role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded={open}>\n                {Icon && <span className=\"menu-icon\">\n            <Icon className=\"hori-icon me-1\" />\n          </span>}\n                <span className=\"menu-text\"> {item.label} </span>\n                <span className=\"menu-arrow\"></span>\n            </Link>\n\n            {item.children && (hasGrandChild ? <div className={classNames(subMenuClassNames, \"collapse collapse-lg\", {\n      show: showMenu\n    })} aria-labelledby={item.key}>\n                        <Row>\n                            {(chunks || []).map((child, i) => {\n          return <Col key={i} lg={4}>\n                                        <MegaMenu item={child} activeMenuItems={activeMenuItems} />\n                                    </Col>;\n        })}\n                        </Row>\n                    </div> : <ul className={classNames(\"collapse sub-menu\", subMenuClassNames, {\n      show: showMenu\n    })} aria-labelledby={item.key}>\n                        {(item.children || []).map((child, i) => {\n        return <React.Fragment key={i}>\n                                    {child.children ? <>\n                                            {/* parent */}\n                                            <MenuItemWithChildren item={child} tag=\"li\" linkClassName={classNames(\"dropdown-item\", activeMenuItems.includes(child.key) ? \"menuitem-active\" : \"\")} activeMenuItems={activeMenuItems} className=\"menu-item\" subMenuClassNames=\"dropdown-menu\" toggleMenu={toggleMenu} />\n                                        </> : <>\n                                            {/* child */}\n                                            <MenuItemLink item={child} className={classNames(\"dropdown-item\", {\n              active: activeMenuItems.includes(child.key)\n            })} />\n                                        </>}\n                                </React.Fragment>;\n      })}\n                    </ul>)}\n        </Tag>;\n};\nconst MenuItem = ({\n  item,\n  className,\n  linkClassName\n}) => {\n  return <li className={classNames(\"menu-item\", className)}>\n            <MenuItemLink item={item} className={linkClassName} />\n        </li>;\n};\nconst MenuItemLink = ({\n  item,\n  className\n}) => {\n  const Icon = item.icon;\n  return (\n    <Link \n      to={item.url || '#'} \n      target={item.target} \n      className={classNames(\"menu-link\", className)} \n      data-menu-key={item.key}\n      onClick={(e) => {\n        if (!item.url) {\n          e.preventDefault();\n        }\n      }}\n    >\n      {Icon && <span className=\"menu-icon\">\n        <Icon className=\"hori-icon me-1\" />\n      </span>}\n      <span className=\"menu-text\"> {item.label} </span>\n    </Link>\n  );\n};\nconst MegaMenu = ({\n  item,\n  activeMenuItems\n}) => {\n  return <>\n            {item.map((child, i) => {\n      return <MenuItemLink key={i} item={child} className={classNames(\"dropdown-item\", {\n        active: activeMenuItems.includes(child.key)\n      })} />;\n    })}\n        </>;\n};\n\n/**\n * Renders the application menu\n */\n\nconst AppMenu = ({\n  menuItems\n}) => {\n  const location = useLocation();\n  const menuRef = useRef(null);\n  const [topnavMenuItems] = useState(menuItems);\n  const [activeMenuItems, setActiveMenuItems] = useState([]);\n\n  /*\n   * toggle the menus\n   */\n  const toggleMenu = (menuItem, show) => {\n    if (show) setActiveMenuItems([menuItem[\"key\"], ...findAllParent(topnavMenuItems, menuItem)]);\n  };\n\n  /**\n   * activate the menuitems\n   */\n  const activeMenu = useCallback(() => {\n    const div = document.getElementById(\"main-side-menu\");\n    let matchingMenuItem = null;\n    if (div) {\n      const items = div.getElementsByTagName(\"a\");\n      for (let i = 0; i < items.length; ++i) {\n        const trimmedURL = location?.pathname;\n        if (trimmedURL === items[i]?.pathname) {\n          matchingMenuItem = items[i];\n          break;\n        }\n      }\n      if (matchingMenuItem) {\n        //\n        const mid = matchingMenuItem.getAttribute(\"data-menu-key\");\n        const activeMt = findMenuItem(topnavMenuItems, mid);\n        if (activeMt) {\n          setActiveMenuItems([activeMt[\"key\"], ...findAllParent(topnavMenuItems, activeMt)]);\n        }\n      }\n    }\n  }, [location.pathname, topnavMenuItems]);\n  useEffect(() => {\n    if (topnavMenuItems && topnavMenuItems.length > 0) activeMenu();\n  }, [activeMenu, topnavMenuItems]);\n  return <>\n            <ul className=\"menu\" ref={menuRef} id=\"main-side-menu\">\n                {(topnavMenuItems || []).map((item, idx) => {\n        return <React.Fragment key={idx}>\n                            {item.children ? <MenuItemWithChildren item={item} tag=\"li\" className=\"menu-item\" subMenuClassNames=\"dropdown-menu\" activeMenuItems={activeMenuItems} linkClassName=\"nav-link\" toggleMenu={toggleMenu} /> : <MenuItem item={item} className={classNames({\n            \"menuitem-active\": activeMenuItems.includes(item.key)\n          })} linkClassName={classNames({\n            \"menuitem-active\": activeMenuItems.includes(item.key)\n          })} />}\n                        </React.Fragment>;\n      })}\n            </ul>\n        </>;\n};\nexport default AppMenu;","import React from \"react\";\n// import { Collapse } from 'react-bootstrap';\n// import classNames from 'classnames';\n// import SimpleBar from 'simplebar-react';\n\n// helpers\nimport { getHorizontalMenuItems } from \"../../helpers/menu\";\n\n// components\nimport AppMenu from \"./Menu\";\nconst Navbar = () => {\n  // change the inputTheme value to light for creative theme\n  // const inputTheme = 'light';\n\n  return <React.Fragment>\n      <div className=\"app-menu\">\n        <AppMenu menuItems={getHorizontalMenuItems()} />\n      </div>\n    </React.Fragment>;\n};\nexport default Navbar;"],"names":["splitArray","array","chunkSize","_","index","begin","MenuItemWithChildren","item","tag","linkClassName","className","subMenuClassNames","activeMenuItems","toggleMenu","Tag","width","useViewport","open","setOpen","useState","showMenu","hasChild","child","_a","hasGrandChild","chunks","useEffect","toggleMenuItem","e","status","Icon","jsxs","classNames","Link","jsx","Row","i","Col","MegaMenu","React","Fragment","MenuItemLink","MenuItem","AppMenu","menuItems","location","useLocation","menuRef","useRef","topnavMenuItems","setActiveMenuItems","menuItem","show","findAllParent","activeMenu","useCallback","div","matchingMenuItem","items","mid","activeMt","findMenuItem","idx","Navbar","getHorizontalMenuItems"],"mappings":"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"}